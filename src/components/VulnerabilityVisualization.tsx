import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { PieChart, Pie, Cell, ResponsiveContainer, Legend } from 'recharts'

interface Vulnerability {
  id: number
  type: string
  name: string
  severity: 'Low' | 'Medium' | 'High'
  location: string
}

interface VulnerabilityVisualizationProps {
  vulnerabilities: Vulnerability[]
}

export default function VulnerabilityVisualization({ vulnerabilities }: VulnerabilityVisualizationProps) {
  const severityCounts = vulnerabilities.reduce((acc, vuln) => {
    acc[vuln.severity] = (acc[vuln.severity] || 0) + 1
    return acc
  }, {} as Record<string, number>)

  const data = Object.entries(severityCounts).map(([name, value]) => ({ name, value }))

  const COLORS = {
    High: '#ef4444',
    Medium: '#f97316',
    Low: '#eab308',
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle>Vulnerability Visualization</CardTitle>
      </CardHeader>
      <CardContent>
        {vulnerabilities.length > 0 ? (
          <ResponsiveContainer width="100%" height={300}>
            <PieChart>
              <Pie
                data={data}
                cx="50%"
                cy="50%"
                labelLine={false}
                outerRadius={80}
                fill="#8884d8"
                dataKey="value"
              >
                {data.map((entry, index) => (
                  <Cell key={`cell-${index}`} fill={COLORS[entry.name as keyof typeof COLORS]} />
                ))}
              </Pie>
              <Legend />
            </PieChart>
          </ResponsiveContainer>
        ) : (
          <p>No vulnerabilities to visualize. Run a scan to identify issues.</p>
        )}
      </CardContent>
    </Card>
  )
}

