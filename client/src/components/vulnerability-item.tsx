import { Card, CardContent } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { AlertCircle, AlertTriangle, CheckCircle2 } from "lucide-react"
import type { Vulnerability } from "../../types/security-types"
interface VulnerabilityItemProps {
  vulnerability: Vulnerability
  isSelected: boolean
  onClick: () => void
}
export function VulnerabilityItem({ vulnerability, isSelected, onClick }: VulnerabilityItemProps) {
  const getBadgeClass = (severity: string) => {
    switch (severity) {
      case "high":
        return "bg-red-500 text-white hover:bg-red-600"
      case "medium":
        return "bg-yellow-500 text-white hover:bg-yellow-600"
      default:
        return "bg-blue-500 text-white hover:bg-blue-600"
    }
  }
  return (
    <Card className={`mb-2 cursor-pointer hover:bg-accent ${isSelected ? "border-primary" : ""}`} onClick={onClick}>
      <CardContent className="p-4">
        <div className="flex items-start justify-between gap-4">
          <div>
            <h4 className="font-medium">{vulnerability.title}</h4>
            <p className="text-sm text-muted-foreground">
              {vulnerability.packageName}@{vulnerability.version}
            </p>
          </div>
          <Badge className={`capitalize ${getBadgeClass(vulnerability.severity)}`}>
            {vulnerability.severity === "high" ? (
              <AlertCircle className="w-3 h-3 mr-1" />
            ) : vulnerability.severity === "medium" ? (
              <AlertTriangle className="w-3 h-3 mr-1" />
            ) : (
              <CheckCircle2 className="w-3 h-3 mr-1" />
            )}
            {vulnerability.severity}
          </Badge>
        </div>
      </CardContent>
    </Card>
  )
}